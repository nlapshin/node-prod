version: "3.9"

services:
  nginx-reverse-proxy:
    image: nginx:alpine
    container_name: reverse-proxy
    hostname: reverse-proxy
    tty: true
    stdin_open: true
    restart: "unless-stopped"

    volumes:
      - ./nginx/config.template:/etc/nginx/conf.d/default.conf

    ports:
      - 80:80
      - 443:443

    networks:
      - api-network

    depends_on:
      - nodejs-server-1

  nodejs-server-1:
    container_name: api
    hostname: api
    restart: "unless-stopped"

    build:
      context: .
      dockerfile: Dockerfile

    environment:
      - PORT=6000

    networks:
      - api-network
      - cache-network
      - db-network

    links:
      - redis-cache

  redis-cache:
    image: redis
    container_name: cache
    hostname: cache
    restart: "unless-stopped"

    networks:
      - cache-network

  postgres-db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: example
      POSTGRES_PASSWORD: example

    networks:
      - db-network

networks:
  api-network:
    driver: bridge

  cache-network:
    driver: bridge

  db-network:
    driver: bridge
